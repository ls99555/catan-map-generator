@use '../variables' as *;

.controlsContainer {
  background: $controls-background;
  border: 1px solid $controls-border;
  border-radius: $border-radius-lg;
  padding: $controls-padding;
  margin-bottom: $spacing-6;
  box-shadow: $shadow-base;

  @media (max-width: $breakpoint-md) {
    margin-bottom: $spacing-4;
    padding: $spacing-4;
  }
}

.controlsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: $spacing-6;
  margin-bottom: $spacing-6;

  @media (max-width: $breakpoint-sm) {
    grid-template-columns: 1fr;
    gap: $spacing-4;
  }
}

.controlGroup {
  display: flex;
  flex-direction: column;
  gap: $spacing-3;
}

.label {
  font-size: $font-size-sm;
  font-weight: $font-weight-semibold;
  color: $text-dark;
  margin-bottom: $spacing-2;
}

.select {
  width: 100%;
  padding: $spacing-3;
  border: 1px solid $border-gray;
  border-radius: $border-radius-base;
  background: $background-white;
  font-size: $font-size-base;
  color: $text-dark;
  transition: all $transition-fast;

  &:focus {
    outline: none;
    border-color: $primary-blue;
    box-shadow: 0 0 0 3px rgba($primary-blue, 0.1);
  }

  &:disabled {
    background: $background-light;
    color: $text-light;
    cursor: not-allowed;
  }
}

.checkboxGroup {
  display: flex;
  flex-direction: column;
  gap: $spacing-3;
}

.checkboxItem {
  display: flex;
  align-items: center;
  gap: $spacing-2;
}

.checkbox {
  width: 16px;
  height: 16px;
  accent-color: $primary-blue;
}

.checkboxLabel {
  font-size: $font-size-sm;
  color: $text-medium;
  cursor: pointer;
}

.buttonGroup {
  display: flex;
  gap: $spacing-3;
  justify-content: center;
  margin-top: $spacing-4;

  @media (max-width: $breakpoint-sm) {
    flex-direction: column;
  }
}

.generateButton {
  background: $primary-blue;
  color: $background-white;
  border: none;
  padding: $spacing-3 $spacing-6;
  border-radius: $border-radius-base;
  font-size: $font-size-base;
  font-weight: $font-weight-semibold;
  cursor: pointer;
  transition: all $transition-fast;
  min-width: 160px;

  &:hover:not(:disabled) {
    background: $primary-blue-hover;
    transform: translateY(-1px);
    box-shadow: $shadow-base;
  }

  &:active {
    transform: translateY(0);
  }

  &:disabled {
    background: $secondary-gray;
    cursor: not-allowed;
    transform: none;
  }
}

.exportButton {
  background: $background-white;
  color: $primary-blue;
  border: 2px solid $primary-blue;
  padding: $spacing-3 $spacing-6;
  border-radius: $border-radius-base;
  font-size: $font-size-base;
  font-weight: $font-weight-semibold;
  cursor: pointer;
  transition: all $transition-fast;
  min-width: 160px;

  &:hover:not(:disabled) {
    background: $primary-blue;
    color: $background-white;
    transform: translateY(-1px);
    box-shadow: $shadow-base;
  }

  &:active {
    transform: translateY(0);
  }

  &:disabled {
    border-color: $secondary-gray;
    color: $secondary-gray;
    cursor: not-allowed;
    transform: none;
  }
}

.scenarioDescription {
  background: lighten($primary-blue, 45%);
  border: 1px solid lighten($primary-blue, 30%);
  border-radius: $border-radius-base;
  padding: $spacing-3;
  margin-top: $spacing-2;
  font-size: $font-size-sm;
  color: $text-medium;
  line-height: 1.4;

  &.hidden {
    display: none;
  }
}

.playerCountBadge {
  display: inline-flex;
  align-items: center;
  background: $success-green;
  color: $background-white;
  padding: $spacing-1 $spacing-2;
  border-radius: $border-radius-sm;
  font-size: $font-size-xs;
  font-weight: $font-weight-semibold;
  margin-left: $spacing-2;

  &.invalid {
    background: $error-red;
  }

  &.warning {
    background: $warning-yellow;
    color: $text-dark;
  }
}

.errorMessage {
  background: lighten($error-red, 40%);
  border: 1px solid $error-red;
  border-radius: $border-radius-base;
  padding: $spacing-3;
  margin-top: $spacing-2;
  color: $error-red;
  font-size: $font-size-sm;
  font-weight: $font-weight-medium;
}

// Loading spinner for generate button
.loading {
  display: inline-block;
  width: 16px;
  height: 16px;
  border: 2px solid transparent;
  border-top: 2px solid currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-right: $spacing-2;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
